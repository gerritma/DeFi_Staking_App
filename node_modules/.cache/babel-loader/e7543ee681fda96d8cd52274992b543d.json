{"ast":null,"code":"import _regeneratorRuntime from \"/Users/gerrit/Documents/05_Learning/05_Blockchain/03_DeFi_Staking/defi_tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/gerrit/Documents/05_Learning/05_Blockchain/03_DeFi_Staking/defi_tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/gerrit/Documents/05_Learning/05_Blockchain/03_DeFi_Staking/defi_tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/gerrit/Documents/05_Learning/05_Blockchain/03_DeFi_Staking/defi_tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gerrit/Documents/05_Learning/05_Blockchain/03_DeFi_Staking/defi_tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/gerrit/Documents/05_Learning/05_Blockchain/03_DeFi_Staking/defi_tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/gerrit/Documents/05_Learning/05_Blockchain/03_DeFi_Staking/defi_tutorial/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/gerrit/Documents/05_Learning/05_Blockchain/03_DeFi_Staking/defi_tutorial/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport DaiToken from '../abis/DaiToken.json';\nimport DappToken from '../abis/DappToken.json';\nimport TokenFarm from '../abis/TokenFarm.json';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport './App.css';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. Maybe try MetaMask.');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, daiTokenData, daiToken, daiTokenBalance, dappTokenData, dappToken, dappTokenBalance, tokenFarmData, tokenFarm, stakingBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                // console.log(networkId)\n                // load Dai Token\n                daiTokenData = DaiToken.networks[networkId];\n\n                if (!daiTokenData) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                daiToken = new web3.eth.Contract(DaiToken.abi, daiTokenData.address);\n                this.setState({\n                  daiToken: daiToken\n                });\n                _context3.next = 14;\n                return daiToken.methods.balanceOf(this.state.account).call();\n\n              case 14:\n                daiTokenBalance = _context3.sent;\n                this.setState({\n                  daiTokenBalance: daiTokenBalance.toString()\n                }); // console.log(web3.utils.fromWei(daiTokenBalance, 'ether'))\n\n                _context3.next = 19;\n                break;\n\n              case 18:\n                window.alert('DaiToken ccontract not deployed to detected Network.');\n\n              case 19:\n                // load Dapp Token\n                dappTokenData = DappToken.networks[networkId];\n\n                if (!dappTokenData) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                dappToken = new web3.eth.Contract(DappToken.abi, dappTokenData.address);\n                this.setState({\n                  dappToken: dappToken\n                });\n                _context3.next = 25;\n                return dappToken.methods.balanceOf(this.state.account).call();\n\n              case 25:\n                dappTokenBalance = _context3.sent;\n                this.setState({\n                  dappTokenBalance: dappTokenBalance.toString()\n                }); // console.log(web3.utils.fromWei(dappTokenBalance, 'ether'))\n\n                _context3.next = 30;\n                break;\n\n              case 29:\n                window.alert('DappToken ccontract not deployed to detected Network.');\n\n              case 30:\n                // load Dapp Token Farm\n                tokenFarmData = TokenFarm.networks[networkId];\n\n                if (!dappTokenData) {\n                  _context3.next = 40;\n                  break;\n                }\n\n                tokenFarm = new web3.eth.Contract(TokenFarm.abi, tokenFarmData.address);\n                this.setState({\n                  tokenFarm: tokenFarm\n                });\n                _context3.next = 36;\n                return tokenFarm.methods.stakingBalance(this.state.account).call();\n\n              case 36:\n                stakingBalance = _context3.sent;\n                this.setState({\n                  stakingBalance: stakingBalance.toString()\n                }); // console.log(web3.utils.fromWei(stakingBalance, 'ether'))\n\n                _context3.next = 41;\n                break;\n\n              case 40:\n                window.alert('TokenFarm ccontract not deployed to detected Network.');\n\n              case 41:\n                // Done loading\n                this.setState({\n                  loading: false\n                });\n\n              case 42:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.stakeTokens = function (amount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.daiToken.methods.approve(_this.state.tokenFarm._address, amount).send({\n        from: _this.state.account\n      }).on('transactionHash', function (hash) {\n        _this.state.tokenFarm.methods.stakeTokens(amount).send({\n          from: _this.state.account\n        }).on('transactionHash', function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      account: '0x0',\n      // Smart Contracts\n      daiToken: {},\n      dappToken: {},\n      tokenFarm: {},\n      // Balances\n      daiTokenBalance: '0',\n      dappTokenBalance: '0',\n      stakingBalance: '0',\n      // \n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var content;\n\n      if (this.state.loading) {\n        content = /*#__PURE__*/React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }\n        }, \" Loading... \");\n      } else {\n        content = /*#__PURE__*/React.createElement(Main, {\n          daiTokenBalance: this.state.daiTokenBalance,\n          dappTokenBalance: this.state.dappTokenBalance,\n          stakingBalance: this.state.stakingBalance,\n          stakeTokens: this.stakeTokens,\n          unStakeTokens: this.unStakeTokens,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '600px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"http://www.dappuniversity.com/bootcamp\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }), content)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/gerrit/Documents/05_Learning/05_Blockchain/03_DeFi_Staking/defi_tutorial/src/components/App.js"],"names":["React","Component","Web3","DaiToken","DappToken","TokenFarm","Navbar","Main","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","daiTokenData","networks","daiToken","Contract","abi","address","methods","balanceOf","state","call","daiTokenBalance","toString","dappTokenData","dappToken","dappTokenBalance","tokenFarmData","tokenFarm","stakingBalance","loading","props","stakeTokens","amount","approve","_address","send","from","on","hash","content","unStakeTokens","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport DaiToken from '../abis/DaiToken.json'\nimport DappToken from '../abis/DappToken.json'\nimport TokenFarm from '../abis/TokenFarm.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\nimport './App.css'\n\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n   }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. Maybe try MetaMask.')\n    }\n  }\n\n  async loadBlockchainData () {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n\n    this.setState({account: accounts[0]})\n\n    const networkId = await web3.eth.net.getId()\n    // console.log(networkId)\n\n    // load Dai Token\n    const daiTokenData = DaiToken.networks.[networkId]\n    if(daiTokenData) {\n      const daiToken = new web3.eth.Contract(DaiToken.abi, daiTokenData.address)\n      this.setState({daiToken})\n      let daiTokenBalance = await daiToken.methods.balanceOf(this.state.account).call()\n      this.setState({daiTokenBalance: daiTokenBalance.toString()})\n      // console.log(web3.utils.fromWei(daiTokenBalance, 'ether'))\n    } else {\n      window.alert('DaiToken ccontract not deployed to detected Network.')\n    }\n\n    // load Dapp Token\n    const dappTokenData = DappToken.networks.[networkId]\n    if(dappTokenData) {\n      const dappToken = new web3.eth.Contract(DappToken.abi, dappTokenData.address)\n      this.setState({dappToken})\n      let dappTokenBalance = await dappToken.methods.balanceOf(this.state.account).call()\n      this.setState({dappTokenBalance: dappTokenBalance.toString()})\n      // console.log(web3.utils.fromWei(dappTokenBalance, 'ether'))\n    } else {\n      window.alert('DappToken ccontract not deployed to detected Network.')\n    }\n\n    // load Dapp Token Farm\n    const tokenFarmData = TokenFarm.networks.[networkId]\n    if(dappTokenData) {\n      const tokenFarm = new web3.eth.Contract(TokenFarm.abi, tokenFarmData.address)\n      this.setState({tokenFarm})\n      let stakingBalance = await tokenFarm.methods.stakingBalance(this.state.account).call()\n      this.setState({stakingBalance: stakingBalance.toString()})\n      // console.log(web3.utils.fromWei(stakingBalance, 'ether'))\n    } else {\n      window.alert('TokenFarm ccontract not deployed to detected Network.')\n    }\n\n    // Done loading\n    this.setState({loading :false})\n  }\n\n  stakeTokens = (amount) => {\n    this.setState({loading: true})\n    this.state.daiToken.methods.approve(this.state.tokenFarm._address, amount).send({from: this.state.account}).on('transactionHash', (hash)=> {\n      this.state.tokenFarm.methods.stakeTokens(amount).send({from: this.state.account}).on('transactionHash', (hash)=> {\n        this.setState({loading: false})\n      })\n    })\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '0x0',\n      // Smart Contracts\n      daiToken: {},\n      dappToken: {},\n      tokenFarm: {},\n      // Balances\n      daiTokenBalance: '0',\n      dappTokenBalance: '0',\n      stakingBalance: '0',\n      // \n      loading: true\n    }\n  }\n\n  render() {\n\n    let content\n    if(this.state.loading) {\n      content = <p id=\"loader\" className=\"text-center\"> Loading... </p>\n    } else {\n      content = <Main \n        daiTokenBalance = {this.state.daiTokenBalance}\n        dappTokenBalance = {this.state.dappTokenBalance}\n        stakingBalance = {this.state.stakingBalance}\n        stakeTokens = {this.stakeTokens}\n        unStakeTokens = {this.unStakeTokens}\n      />\n    }\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '600px' }}>\n              <div className=\"content mr-auto ml-auto\">\n                <a\n                  href=\"http://www.dappuniversity.com/bootcamp\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                </a>\n\n                {content}\n\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}